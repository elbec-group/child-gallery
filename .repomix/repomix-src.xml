This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-02-01T17:00:24.427Z

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.
</notes>

<additional_info>

For more information about Repomix, visit: https://github.com/yamadashy/repomix
</additional_info>

</file_summary>

<repository_structure>
components/
  About.tsx
  Footer.tsx
  Gallery.tsx
  Header.tsx
  Hero.tsx
  ImageUpload.tsx
  PhotoDetail.tsx
App.tsx
index.css
main.tsx
vite-env.d.ts
</repository_structure>

<repository_files>
This section contains the contents of the repository's files.

<file path="components/About.tsx">
export const AboutSection = () => (
  <section id="about" className="py-16 bg-white">
    <div className="max-w-4xl mx-auto px-4">
      <h2 className="text-3xl font-bold mb-6 text-gray-800">
        Sobre aquesta pàgina
      </h2>
      <div className="prose prose-lg">
        <p>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do
          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
          minim veniam, quis nostrud exercitation ullamco laboris nisi ut
          aliquip ex ea commodo consequat.
        </p>
        <p>
          Duis aute irure dolor in reprehenderit in voluptate velit esse cillum
          dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
          proident, sunt in culpa qui officia deserunt mollit anim id est
          laborum.
        </p>
      </div>
    </div>
  </section>
);
</file>

<file path="components/Footer.tsx">
import React from "react";
import { Shield } from "lucide-react";

const Footer = () => {
  return (
    <footer className="bg-white/80 backdrop-blur-lg border-t border-gray-200">
      <div className="container mx-auto px-4 py-12">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Left Column */}
          <div className="space-y-6">
            <p className="text-gray-600 text-sm leading-relaxed">
              Aquest és un espai per compartir les opinions de nens i nenes de
              4t i 5è d'educació primària de Catalunya. Aquests alumnes han
              participat en el projecte "Preeemptive interventions for
              high-efficacy instruction on writing" (PRINT-W), finançat pel
              Ministerio de Innovación y Ciencia (ref. PID2022-137868NB-I00;
              investigadora principal: Naymé Salas). Aquesta web utilitza eines
              d'intel·ligència artificial per evitar que es comparteixi
              contingut diferent de textos manuscrits per infants de primària.
              Ni la investigadora principal i l'equip del projecte de recerca,
              ni el desenvolupador de la web no es fan responsables d'usos amb
              altres finalitats. Aquesta responsabilitat és exclusiva de qui
              penja contingut. ES RECOMANA LA SUPERVISIÓ PARENTAL EN TOT MOMENT.
            </p>

            {/* Logos */}
            <div className="flex flex-col md:flex-row items-center justify-start gap-6">
              <img
                src="/elbec.avif"
                alt="El Bec Logo"
                className="h-24 object-contain"
              />
              <img
                src="/gobierno.avif"
                alt="Gobierno Logo"
                className="h-24 object-contain"
              />
              <img
                src="/uab.avif"
                alt="UAB Logo"
                className="h-24 object-contain"
              />
            </div>
          </div>

          {/* Right Column */}
          <div className="space-y-4">
            <div className="flex items-start space-x-2">
              <Shield className="h-5 w-5 mt-1 flex-shrink-0 text-[#193547]" />
              <div className="space-y-2">
                <h3 className="font-semibold text-gray-800">Seguretat</h3>
                <p className="text-gray-600 text-sm leading-relaxed">
                  Espai segur per a infants. Ens prenem molt seriosament la
                  seguretat dels infants. Per això, les imatges que es penjen
                  són moderades, a més de les eines d'intel·ligència artificial
                  que s'han utilitzat en la seva construcció. No es recopila
                  informació personal dels usuaris de la web, garantint, així,
                  la seva confidencialitat.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
</file>

<file path="components/Gallery.tsx">
import React, { useState, useCallback } from "react";
import { Search } from "lucide-react";
import { Link } from "react-router-dom";
import type { ImageItem } from "../App";

interface GalleryProps {
  images: ImageItem[];
}

const Gallery: React.FC<GalleryProps> = ({ images }) => {
  const [searchTerm, setSearchTerm] = useState("");

  const filteredImages = images.filter((img) =>
    img.pseudonym.toLowerCase().includes(searchTerm.toLowerCase()),
  );

  return (
    <section id="gallery" className="py-16">
      <div className="max-w-6xl mx-auto">
        <h2 className="text-3xl font-bold text-center mb-8 text-gray-800">
          Galeria de textos d'opinió
        </h2>

        <div className="relative max-w-md mx-auto mb-12">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
          <input
            type="text"
            placeholder="Cercar per pseudònim o títol..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full pl-10 pr-4 py-2 rounded-full border border-gray-300 focus:ring-2 focus:ring-[#193547] focus:border-transparent"
          />
          {searchTerm && (
            <p className="absolute right-4 top-1/2 transform -translate-y-1/2 text-sm text-gray-500">
              {filteredImages.length} resultado(s)
            </p>
          )}
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
          {filteredImages.map((image) => (
            <Link
              key={image.id}
              to={`/photo/${image.id}`}
              className="group relative overflow-hidden rounded-lg shadow-lg bg-white"
            >
              <img
                src={image.url}
                alt={image.title || "Imatge de galeria"}
                className="w-full h-64 object-cover transform transition-transform duration-300 group-hover:scale-110"
                loading="lazy"
              />
              <div className="absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                <div className="absolute bottom-0 left-0 right-0 p-4 text-white">
                  <p className="font-bold">{image.pseudonym}</p>
                  {image.title && (
                    <p className="text-sm text-gray-200">{image.title}</p>
                  )}
                </div>
              </div>
            </Link>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Gallery;
</file>

<file path="components/Header.tsx">
import React, { useState, useEffect } from "react";
import { Camera } from "lucide-react";

const Header = () => {
  const [isScrolled, setIsScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const handleClick = () => {
    const aboutSection = document.getElementById("about");
    aboutSection?.scrollIntoView({ behavior: "smooth" });
  };

  return (
    <header
      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
        isScrolled ? "bg-white/80 backdrop-blur-lg shadow-lg" : "bg-transparent"
      }`}
    >
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between h-16">
          <div className="flex items-center space-x-2">
            <Camera className="h-8 w-8 text-[#193547]" />
            <span className="text-xl font-bold bg-gradient-to-r from-[#193547] to-[#193547] bg-clip-text text-transparent">
              TextosOpinio
            </span>
          </div>

          <nav className="flex">
            <button
              onClick={handleClick}
              className="text-gray-600 hover:text-[#193547] transition-colors duration-200 font-medium"
            >
              Sobre aquesta pàgina
            </button>
          </nav>
        </div>
      </div>
    </header>
  );
};

export default Header;
</file>

<file path="components/Hero.tsx">
import React from "react";
import { PenLine, BookOpen } from "lucide-react";

const Hero = () => {
  const handleStartClick = () => {
    const uploadSection = document.getElementById("upload");
    uploadSection?.scrollIntoView({ behavior: "smooth" });
  };

  const handleGalleryClick = () => {
    const gallerySection = document.getElementById("gallery");
    gallerySection?.scrollIntoView({ behavior: "smooth" });
  };

  return (
    <section className="min-h-[calc(100vh-5rem)] flex items-center py-12 overflow-hidden bg-gradient-to-br from-white to-gray-50">
      <div className="container mx-auto px-4">
        <div className="grid lg:grid-cols-2 gap-12 items-center">
          {/* Left Column - Content */}
          <div className="space-y-8">
            <div className="relative">
              <div className="absolute -top-6 -left-6 w-24 h-24 bg-[#193547]/10 rounded-full blur-xl" />
              <h1 className="text-5xl lg:text-6xl font-bold relative">
                <span className="block text-[#193547]">Comparteix</span>
                <span className="block mt-2">la teva opinió</span>
              </h1>
            </div>

            <p className="text-xl text-gray-600 max-w-lg">
              Un espai on els alumnes de 4t i 5è poden expressar les seves idees
              i pensaments de manera creativa i constructiva.
            </p>

            <div className="flex flex-col sm:flex-row gap-4">
              <button
                onClick={handleStartClick}
                className="flex items-center justify-center gap-2 px-8 py-4 bg-[#193547] text-white rounded-xl font-semibold hover:bg-[#193547]/90 transform hover:-translate-y-1 transition-all duration-200 shadow-lg shadow-[#193547]/20"
              >
                <PenLine className="w-5 h-5" />
                Penja el teu text
              </button>
              <button
                onClick={handleGalleryClick}
                className="flex items-center justify-center gap-2 px-8 py-4 bg-white text-[#193547] rounded-xl font-semibold hover:bg-gray-50 transform hover:-translate-y-1 transition-all duration-200 shadow-lg border-2 border-[#193547]"
              >
                <BookOpen className="w-5 h-5" />
                Veure textos
              </button>
            </div>
          </div>

          {/* Right Column - Image */}
          <div className="relative">
            {/* Decorative elements */}
            <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[140%] h-[140%] rounded-full border-[32px] border-[#193547]/5 animate-[spin_40s_linear_infinite]" />
            <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[120%] h-[120%] rounded-full border-[24px] border-[#193547]/10 animate-[spin_30s_linear_infinite_reverse]" />

            {/* Main image container */}
            <div className="relative aspect-square max-w-xl mx-auto">
              <div className="absolute inset-0 bg-gradient-to-br from-[#193547]/20 to-transparent rounded-full animate-pulse" />
              <img
                src="/hero.avif"
                alt="Hero image"
                className="relative z-10 w-full h-full object-contain p-8 transform hover:scale-105 transition-transform duration-300 rounded-xl"
              />

              {/* Floating decorative elements */}
              <div className="absolute top-0 right-0 w-20 h-20 bg-[#193547]/10 rounded-full blur-xl animate-float" />
              <div className="absolute bottom-12 -left-6 w-16 h-16 bg-[#193547]/20 rounded-full blur-lg animate-float-delayed" />
              <div className="absolute top-1/4 -right-8 w-24 h-24 bg-[#193547]/15 rounded-full blur-xl animate-float" />
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Hero;
</file>

<file path="components/ImageUpload.tsx">
import React, { useState, useCallback, useRef } from "react";
import { Upload, Image as ImageIcon, AlertCircle } from "lucide-react";
import type { ImageItem } from "../App";

interface ImageUploadProps {
  onUpload: (image: ImageItem) => void;
}

const ImageUpload: React.FC<ImageUploadProps> = ({ onUpload }) => {
  const [dragActive, setDragActive] = useState(false);
  const [preview, setPreview] = useState<string | null>(null);
  const [pseudonym, setPseudonym] = useState("");
  const [title, setTitle] = useState("");
  const fileInputRef = useRef<HTMLInputElement>(null);

  const handleDrag = useCallback((e: React.DragEvent) => {
    e.preventDefault();
    e.stopPropagation();
    if (e.type === "dragenter" || e.type === "dragover") {
      setDragActive(true);
    } else if (e.type === "dragleave") {
      setDragActive(false);
    }
  }, []);

  const handleDrop = useCallback((e: React.DragEvent) => {
    e.preventDefault();
    e.stopPropagation();
    setDragActive(false);

    const file = e.dataTransfer.files?.[0];
    if (file && file.type.startsWith("image/")) {
      const reader = new FileReader();
      reader.onload = () => {
        setPreview(reader.result as string);
      };
      reader.readAsDataURL(file);
    }
  }, []);

  const handleFileChange = useCallback(
    (e: React.ChangeEvent<HTMLInputElement>) => {
      const file = e.target.files?.[0];
      if (file && file.type.startsWith("image/")) {
        const reader = new FileReader();
        reader.onload = () => {
          setPreview(reader.result as string);
        };
        reader.readAsDataURL(file);
      }
    },
    [],
  );

  const handleSubmit = useCallback(
    (e: React.FormEvent) => {
      e.preventDefault();
      if (preview) {
        onUpload({
          id: Date.now().toString(),
          url: preview,
          pseudonym: pseudonym || "Anònim",
          title: title || undefined,
        });
        setPreview(null);
        setPseudonym("");
        setTitle("");
        if (fileInputRef.current) {
          fileInputRef.current.value = "";
        }
      }
    },
    [preview, pseudonym, title, onUpload],
  );

  const handleClick = () => {
    fileInputRef.current?.click();
  };

  return (
    <section id="upload" className="py-16">
      <div className="max-w-3xl mx-auto">
        <h2 className="text-3xl font-bold text-center mb-8 text-gray-800">
          Penja aquí el teu text d'opinió
        </h2>

        <form onSubmit={handleSubmit} className="space-y-6">
          <div
            className={`relative border-2 border-dashed rounded-lg p-8 text-center transition-colors cursor-pointer ${
              dragActive
                ? "border-[#193547] bg-[#193547]/5"
                : "border-gray-300 hover:border-[#193547]"
            }`}
            onDragEnter={handleDrag}
            onDragLeave={handleDrag}
            onDragOver={handleDrag}
            onDrop={handleDrop}
            onClick={handleClick}
          >
            <input
              type="file"
              ref={fileInputRef}
              onChange={handleFileChange}
              accept="image/*"
              className="hidden"
            />
            {preview ? (
              <img
                src={preview}
                alt="Preview"
                className="max-h-64 mx-auto rounded-lg shadow-lg"
              />
            ) : (
              <div className="space-y-4">
                <Upload className="h-12 w-12 mx-auto text-gray-400" />
                <p className="text-gray-600">
                  Arrossega la teva foto aquí o{" "}
                  <span className="text-[#193547] font-semibold">
                    fes click per sel·leccionar
                  </span>
                </p>
              </div>
            )}
          </div>

          <div className="space-y-4">
            <div>
              <label
                htmlFor="pseudonym"
                className="block text-sm font-medium text-gray-700 mb-1"
              >
                Qui ha escrit aquest text? Fes servir un pseudònim
                <span className="ml-2 text-gray-400 text-xs">(opcional)</span>
              </label>
              <input
                type="text"
                id="pseudonym"
                value={pseudonym}
                onChange={(e) => setPseudonym(e.target.value)}
                className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#193547] focus:border-transparent"
                placeholder="Ex: Escriptor123"
              />
            </div>

            <div>
              <label
                htmlFor="title"
                className="block text-sm font-medium text-gray-700 mb-1"
              >
                Posa un títol al teu text
                <span className="ml-2 text-gray-400 text-xs">(opcional)</span>
              </label>
              <input
                type="text"
                id="title"
                value={title}
                onChange={(e) => setTitle(e.target.value)}
                className="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-[#193547] focus:border-transparent"
                placeholder="Ex: La meva opinió sobre..."
              />
            </div>
          </div>

          <button
            type="submit"
            disabled={!preview}
            className="w-full py-3 bg-[#193547] text-white rounded-lg font-semibold hover:bg-opacity-90 transition-colors duration-200 disabled:bg-gray-400 disabled:cursor-not-allowed"
          >
            Penjar text
          </button>
        </form>
      </div>
    </section>
  );
};

export default ImageUpload;
</file>

<file path="components/PhotoDetail.tsx">
import React from "react";
import { useParams, Link } from "react-router-dom";
import { ArrowLeft, User, Calendar } from "lucide-react";
import type { ImageItem } from "../App";

interface PhotoDetailProps {
  images: ImageItem[];
}

const PhotoDetail: React.FC<PhotoDetailProps> = ({ images }) => {
  const { id } = useParams();
  const image = images.find((img) => img.id === id);

  if (!image) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <h2 className="text-2xl font-bold text-gray-800 mb-4">
            Foto no encontrada
          </h2>
          <Link
            to="/"
            className="inline-flex items-center text-[#193547] hover:text-purple-700"
          >
            <ArrowLeft className="h-5 w-5 mr-2" />
            Volver a la galería
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <Link
        to="/"
        className="inline-flex items-center text-[#193547] hover:text-purple-700 mb-8"
      >
        <ArrowLeft className="h-5 w-5 mr-2" />
        Volver a la galería
      </Link>

      <div className="bg-white rounded-lg shadow-lg overflow-hidden">
        <div className="relative">
          <img
            src={image.url}
            alt={image.title || "Imagen de galería"}
            className="w-full h-[70vh] object-contain bg-black"
          />
        </div>

        <div className="p-6">
          <div className="flex items-start justify-between">
            <div>
              <h1 className="text-3xl font-bold text-gray-800 mb-2">
                {image.title || "Sin título"}
              </h1>
              <div className="flex items-center text-gray-600">
                <User className="h-5 w-5 mr-2" />
                <span className="font-medium">{image.pseudonym}</span>
              </div>
            </div>
          </div>

          <div className="mt-6 pt-6 border-t border-gray-200">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">
              Más fotos de la galería
            </h2>
            <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4">
              {images
                .filter((img) => img.id !== image.id)
                .slice(0, 5)
                .map((img) => (
                  <Link
                    key={img.id}
                    to={`/photo/${img.id}`}
                    className="block group"
                  >
                    <div className="aspect-square overflow-hidden rounded-lg">
                      <img
                        src={img.url}
                        alt={img.title || "Imagen de galería"}
                        className="w-full h-full object-cover transform transition-transform duration-300 group-hover:scale-110"
                      />
                    </div>
                  </Link>
                ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PhotoDetail;
</file>

<file path="App.tsx">
import { useState, useCallback } from "react";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import Header from "./components/Header";
import Hero from "./components/Hero";
import ImageUpload from "./components/ImageUpload";
import Gallery from "./components/Gallery";
import Footer from "./components/Footer";
import PhotoDetail from "./components/PhotoDetail";
import { AboutSection } from "./components/About";

export type ImageItem = {
  id: string;
  url: string;
  pseudonym: string;
  title?: string;
};

function App() {
  const [images, setImages] = useState<ImageItem[]>([
    {
      id: "1",
      url: "https://images.unsplash.com/photo-1503454537195-1dcabb73ffb9",
      pseudonym: "ArtisticKid",
      title: "My First Photo",
    },
    {
      id: "2",
      url: "https://images.unsplash.com/photo-1488521787991-ed7bbaae773c",
      pseudonym: "LittleExplorer",
      title: "Nature Adventure",
    },
    {
      id: "3",
      url: "https://images.unsplash.com/photo-1472162072942-cd5147eb3902",
      pseudonym: "CreativeSpirit",
      title: "Colors of Life",
    },
    {
      id: "4",
      url: "https://images.unsplash.com/photo-1516627145497-ae6968895b74",
      pseudonym: "NatureLover",
      title: "Butterfly Dreams",
    },
    {
      id: "5",
      url: "https://images.unsplash.com/photo-1464535343673-14c68fd228c7",
      pseudonym: "TinyPhotographer",
      title: "Morning Light",
    },
    {
      id: "6",
      url: "https://images.unsplash.com/photo-1490718720478-364a07a997cd",
      pseudonym: "AdventureSeeker",
      title: "Beach Sunset",
    },
    {
      id: "7",
      url: "https://images.unsplash.com/photo-1496275068113-fff8c90750d1",
      pseudonym: "DreamCatcher",
      title: "Garden Magic",
    },
    {
      id: "8",
      url: "https://images.unsplash.com/photo-1472214103451-9374bd1c798e",
      pseudonym: "SkyWatcher",
      title: "Cloud Patterns",
    },
    {
      id: "9",
      url: "https://images.unsplash.com/photo-1490730141103-6cac27aaab94",
      pseudonym: "ColorHunter",
      title: "Sunrise Wonder",
    },
    {
      id: "10",
      url: "https://images.unsplash.com/photo-1501426026826-31c667bdf23d",
      pseudonym: "FlowerChild",
      title: "Summer Blooms",
    },
    {
      id: "11",
      url: "https://images.unsplash.com/photo-1496449903678-68ddcb189a24",
      pseudonym: "PetLover",
      title: "My Best Friend",
    },
    {
      id: "12",
      url: "https://images.unsplash.com/photo-1502082553048-f009c37129b9",
      pseudonym: "TreeHugger",
      title: "Forest Magic",
    },
    {
      id: "13",
      url: "https://images.unsplash.com/photo-1500531279542-fc8490c8ea4d",
      pseudonym: "BeachComber",
      title: "Ocean Waves",
    },
    {
      id: "14",
      url: "https://images.unsplash.com/photo-1493707553966-283afac8c358",
      pseudonym: "GardenGuru",
      title: "Spring Colors",
    },
    {
      id: "15",
      url: "https://images.unsplash.com/photo-1462275646964-a0e3386b89fa",
      pseudonym: "ButterflyWhisperer",
      title: "Wings of Wonder",
    },
  ]);

  const handleImageUpload = useCallback((newImage: ImageItem) => {
    setImages((prev) => [newImage, ...prev]);
  }, []);

  const HomePage = () => (
    <>
      <Hero />
      <ImageUpload onUpload={handleImageUpload} />
      <Gallery images={images} />
      <AboutSection />
    </>
  );

  return (
    <Router>
      <div className="min-h-screen bg-white">
        <Header />
        <main className="container mx-auto px-4 pt-20">
          <Routes>
            <Route path="/" element={<HomePage />} />
            <Route
              path="/photo/:id"
              element={<PhotoDetail images={images} />}
            />
          </Routes>
        </main>
        <Footer />
      </div>
    </Router>
  );
}

export default App;
</file>

<file path="index.css">
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --color-primary: #193547;
}
</file>

<file path="main.tsx">
import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import App from './App.tsx';
import './index.css';

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>
);
</file>

<file path="vite-env.d.ts">
/// <reference types="vite/client" />
</file>

</repository_files>
